version: '3.9'
services:
  mysql:
    container_name: mysql
    image: "mysql"
    restart: "on-failure"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - '/home/mysql-data:/var/lib/mysql'
    networks:
      - my-network
  eureka:
    build:
      context: ../backend/eurekaServer
      dockerfile: Dockerfile
    image: eureka
    container_name: eureka
    restart: "on-failure"
    ports:
      - "8761:8761"
    environment:
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
    networks:
      - my-network
  gatwayapi:
    build:
      context: ../backend/gatewayAPI
      dockerfile: Dockerfile
    image: gatewayapi
    container_name: gatewayapi
    restart: "on-failure"
    ports:
      - "8000:8000"
    depends_on:
      - eureka
    environment:
      - spring.cloud.gateway.routes[0].id=reclamation-microservice-route
      - spring.cloud.gateway.routes[0].uri=http://reclamationservice:8082
      - spring.cloud.gateway.routes[0].predicates[0]=Path=/reclamations/**
      - spring.cloud.gateway.routes[1].id=eureka-server-routre
      - spring.cloud.gateway.routes[1].uri=http://eureka:8761
      - spring.cloud.gateway.routes[1].predicates[0]=Path=/eureka/web
      - spring.cloud.gateway.routes[1].filters[0]=SetPath=/
      - spring.cloud.gateway.routes[1].id=eureka-server-static
      - spring.cloud.gateway.routes[2].uri=http://eureka:8761
      - spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/**
      - spring.cloud.gateway.routes[3].id=livraison-microservice-route
      - spring.cloud.gateway.routes[3].uri=http://livraisonservice:8084
      - spring.cloud.gateway.routes[3].predicates[0]=Path=/livraisons/**
      - spring.cloud.gateway.routes[4].id=order-microservice-route
      - spring.cloud.gateway.routes[4].uri=http://orderservice:8083
      - spring.cloud.gateway.routes[4].predicates[0]=Path=/orders/**
      - spring.cloud.gateway.routes[5].id=user-microservice-route
      - spring.cloud.gateway.routes[5].uri=http://userservice:8081
      - spring.cloud.gateway.routes[5].predicates[0]=Path=/users/**
      - spring.cloud.gateway.routes[6].id=wallet-microservice-route
      - spring.cloud.gateway.routes[6].uri=http://walletservice:8089
      - spring.cloud.gateway.routes[6].predicates[0]=Path=/wallet/**
      - logging.level.root=INFO
      - logging.level.org.springframowrk.cloud.gateway.route.RouteDefinitionLocator = INFO
      - logging.level.org.springframowrk.cloud.gateway= TRACE
      - eureka.client.serviceUrl.defaultZone= http://eureka:8761/eureka/
      

    networks:
      - my-network
  livraisonservice:
    build:
      context: ../backend/services/service-livraison
      dockerfile: Dockerfile
    image: "livraisonservice"
    container_name: livraisonservice
    restart: "on-failure"
    ports:
      - "8084:8084"
    depends_on:
      - mysql
      - eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/
    networks:
      - my-network
  reclamationservice:
    build:
      context: ../backend/services/service-reclamation
      dockerfile: Dockerfile
    image: "reclamationservice"
    container_name: reclamationservice
    restart: "on-failure"
    ports:
      - "8082:8082"
    depends_on:
      - mysql
      - eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/
    networks:
      - my-network
  orderservice:
    build:
      context: ../backend/services/service-order
      dockerfile: Dockerfile
    image: "orderservice"
    container_name: orderservice
    restart: "on-failure"
    ports:
      - "8083:8083"
    depends_on:
      - mysql
      - eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/
    networks:
      - my-network
  productservice:
    build:
      context: ../backend/services/microserviceProduct
      dockerfile: Dockerfile
    image: "productservice"
    container_name: productservice
    restart: "on-failure"
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
    networks:
      - my-network

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - my-network

  userservice:
    build:
      context: ../backend/services/user-service
      dockerfile: Dockerfile
    image: "userservice"
    container_name: userservice
    restart: "on-failure"
    ports:
      - "8081:8081"
    depends_on:
      - mysql
      - eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/
    networks:
      - my-network
  walletservice:
    build:
      context: ../backend/services/service.wallet
      dockerfile: Dockerfile
    image: "walletserice"
    container_name: walletservice
    restart: "on-failure"
    ports:
      - "8089:8089"
      - "5005:5005"
    depends_on:
      - mysql
      - eureka
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"

    networks:
      - my-network      
networks:
  my-network:





      
